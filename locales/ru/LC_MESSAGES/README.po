# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, IONDV LLC
# This file is distributed under the same license as the IONDV rest module
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: IONDV rest module \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-12-27 18:23+1000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../README.md:1
msgid "IONDV. REST"
msgstr ""

#: ../../README.md:3
msgid ""
"REST - is an IONDV. Framework module used to quickly create web services "
"based on metadata for implementing microservice architecture. The module "
"also allows you to integrate applications created on the framework with "
"other systems using the REST API and it provides data exchange to "
"implement arbitrary custom web interfaces (including SPA created on the "
"frameworks Angular, Redux, Vue, etc.)."
msgstr ""
"REST - модуль IONDV. Framework применяется для быстрого создания "
"веб-сервисов на основе метаданных для реализации микросервисной "
"архитектуры. Модуль позволяет также интегрировать приложения созданные на"
" фреймворке с другими системами по REST API и обеспечивает обмен данными "
"для реализации произвольных пользовательских веб-интерфейсов (в том числе"
" SPA созданные на фреймворках Angular, Redux, Vue и т.д.) или для бакенд "
"части мобильных приложений."

#: ../../README.md:9
msgid "IONDV. Framework in brief"
msgstr "Кратко об IONDV. Framework"

#: ../../README.md:11
msgid ""
"IONDV. Framework - is a node.js open source framework for developing "
"accounting applications or microservices based on metadata and individual"
" modules. Framework is a part of instrumental digital platform to create "
"enterprise (ERP) apps. This platform consists of the following open-"
"source components: the IONDV. Framework, the modules and ready-made "
"applications expanding its functionality, visual development environment "
"Studio to create metadata for the app."
msgstr ""
"IONDV. Framework - это опенсорный фреймворк на node.js для разработки "
"учетных приложений или микросервисов на основе метаданных и отдельных "
"модулей. Он является частью инструментальной цифровой платформы для "
"создания enterprise (ERP) приложений состоящей из опенсорсных "
"компонентов: самого фреймворка, модулей и готовых приложений расширяющих "
"его функциональность, визуальной среды Studio для разработки метаданных "
"приложений."

#: ../../README.md:18
msgid "For more details, see IONDV. Framework site."
msgstr "Подробнее об IONDV. Framework на сайте."

#: ../../README.md:20
msgid "Documentation is available in the Github repository."
msgstr "Документация доступна в репозитории на github."

#: ../../README.md:22
msgid "Description"
msgstr "Описание и назначение модуля"

#: ../../README.md:24
msgid ""
"IONDV. REST - is module providing a way to work with the data of IONDV "
"applications via REST API. It's a wrapper to work with the data via "
"standard CRUD functions, it also connects the application's own services,"
" including those using the core API."
msgstr ""
"IONDV. REST - модуль обеспечивающий работу с данными приложения IONDV "
"через REST API. Является оберткой для работы с данными через стандартные "
"функции CRUD или подключает собственные сервисы приложения, в том числе "
"использующие API ядра."

#: ../../README.md:28
msgid "Functionality"
msgstr ""

#: ../../README.md:30
msgid "Overview:"
msgstr ""

#: ../../README.md:32 ../../README.md:38
msgid "Service registration in application configuration"
msgstr "Регистрация сервиса в конфигруации приложения"

#: ../../README.md:33
msgid "Authorization for service requests"
msgstr "Авторизация при запросах к сервисам"

#: ../../README.md:34 ../../README.md:200
msgid "Built-in module services"
msgstr "Встроенные сервисы модуля"

#: ../../README.md:35
msgid "Service handler in the app"
msgstr "Реализация обработчика сервиса в приложении"

#: ../../README.md:36 ../../README.md:666
msgid "Additional services"
msgstr "Дополнительные сервисы модуля"

#: ../../README.md:40
msgid ""
"To connect services in the application, configure them in the global "
"settings of the rest module in the deploy.json file of the application. "
"For example:"
msgstr ""
"Для подключения сервисов в приложении их необходимо сконфигурировать в "
"глобальных настройках модуля rest в файле deploy.json приложения. Пример "
"приведен ниже."

#: ../../README.md:67
msgid ""
"The path to the service registration is in the deploy.json file - "
"modules.rest.globals.di, further specify the name of the service, which "
"will be available at the following address "
"https://domain.com/rest/serviceName, where serviceName - name of the "
"service, set in the di, as in the example above simple or string-list. In"
" the module attribute, specify the path to the js-file with a service "
"handler with a relative path the root of the framework. The handler can "
"be both in the application and in any module or framework, including "
"sample rest module handlers."
msgstr ""
"Путь к регистрациям сервиса в файле deploy.json - "
"modules.rest.globals.di, далее указывается название сервиса, которое "
"будет доступно по адресу https://domain.com/rest/serviceName, где "
"serviceName - имя сервиса, указываемого в di, например в примере выше "
"simple или string-list. В атрибуте module указывается путь к js-файлу с "
"обработчиком сервиса с путем относительно корня фреймворка. Обработчик "
"может быть как в приложении, так и в любом модуле или фреймворке, в т.ч. "
"типовые обработчики модуля rest."

#: ../../README.md:70
msgid "In the options property, the specific service parameters are set."
msgstr ""

#: ../../README.md:72
msgid "For example, for crud service:"
msgstr ""

#: ../../README.md:74
msgid ""
"dataRepo filed - data repository with access control used for operations "
"on objects"
msgstr ""

#: ../../README.md:75
msgid ""
"auth field - authentication component used to obtain the current user "
"account."
msgstr ""

#: ../../README.md:77
msgid "For string-list service:"
msgstr ""

#: ../../README.md:79
msgid "used for data sampling"
msgstr ""

#: ../../README.md:81
msgid "dataRepo field - data repository, used for data sampling"
msgstr ""

#: ../../README.md:82
msgid "stringClassName field - class name of received objects"
msgstr ""

#: ../../README.md:84
msgid ""
"In this case, the class_string@develop-and-test class will be transferred"
" to the getList method of the data repository."
msgstr ""

#: ../../README.md:92
msgid "Authentication for service queries"
msgstr ""

#: ../../README.md:94
msgid "There are several ways to carry out the authorization:"
msgstr ""

#: ../../README.md:96
msgid "Standart authorization services via the login account"
msgstr ""

#: ../../README.md:98
msgid ""
"All services use the standard authorization mechanism by default, which "
"implies the transfer of \tregistration details in the header:"
msgstr ""

#: ../../README.md:100
msgid "authorization via basicAuth, for example:"
msgstr ""

#: ../../README.md:106
msgid "transfer of\tregistration details in the query header:"
msgstr ""

#: ../../README.md:111
msgid "or"
msgstr ""

#: ../../README.md:118
msgid "No authentication services"
msgstr ""

#: ../../README.md:120
msgid ""
"To implement the service without authentication, you must set the none "
"parameter in the deploy.json file:"
msgstr ""

#: ../../README.md:131
msgid ""
"A query to a service will not require authentication, an example query - "
"curl https://dnt.iondv.com/rest/echoo"
msgstr ""

#: ../../README.md:133
msgid "Services with token authentication"
msgstr ""

#: ../../README.md:135
msgid ""
"Token authentication is used to exclude the constant transfer of an "
"account in queries. Tokens are limited in their lifetime."
msgstr ""

#: ../../README.md:137
msgid ""
"To implement the work of the service with authentication through a token,"
" you must set the token parameter in the authMode in the deploy.json "
"file:"
msgstr ""

#: ../../README.md:148
msgid ""
"Authentication through the token is carried out by sending the token "
"value for the auth-token parameter in the request header:"
msgstr ""

#: ../../README.md:154
msgid ""
"You can get a token in two ways: in the console of the ionadmin module or"
" through the token service of the rest module."
msgstr ""

#: ../../README.md:156
msgid ""
"All generated tokens are stored in the collection ion_user_tokens in the "
"database."
msgstr ""

#: ../../README.md:158
msgid "Getting a constant token through the ionadmin module"
msgstr ""

#: ../../README.md:160
msgid ""
"To get a token through the admin console, go to the \"Web Services "
"Security Keys\" navigation item of the ionadmin module, by going to "
"locahost:8888/ionadmin/token."
msgstr ""

#: ../../README.md:162
msgid "On the \"Security Token Generator\" page:"
msgstr ""

#: ../../README.md:164
msgid "Enter the user name in the \"User name\" field"
msgstr ""

#: ../../README.md:165
msgid "Set the \"Account Type\" field to \"local\""
msgstr ""

#: ../../README.md:166
msgid "Click the \"Generate token\" button"
msgstr ""

#: ../../README.md:167
msgid ""
"In the \"Token\" field the token value as follows "
"3a546090355317c287886c0e81dfd304fa5bda99 will appear. Use it as the auth-"
"token header value."
msgstr ""

#: ../../README.md:169
msgid "The default token lifetime is 100 years."
msgstr ""

#: ../../README.md:171
msgid "Getting a temporary token through the rest/token service"
msgstr ""

#: ../../README.md:173
msgid ""
"The second way to get the token is to use the web service of the rest "
"module - token. You can get a token through authenticated request to the "
"rest/token address. For example, through the authorization basicAuth "
"type:"
msgstr ""

#: ../../README.md:179
msgid "or a request with authorization through the parameters in the header:"
msgstr ""

#: ../../README.md:185
msgid ""
"The service response will have a token of the form "
"e444c69894d2087696e0a6c6914788f67ebcf6ee. The default token lifetime is "
"100 years."
msgstr ""

#: ../../README.md:187
msgid ""
"To execute the request, you must either have administrator rights in the "
"system or have use rights for the ws:::gen-ws-token resource."
msgstr ""

#: ../../README.md:189
msgid ""
"You can add a token generation resource for a role from the command line "
"node bin/acl.js --role restGrp --p USE --res ws:::gen-ws-token (where "
"restGrp - name of existing group)"
msgstr ""

#: ../../README.md:191
msgid ""
"The second way to add rights to a resource is to use the admin console of"
" the ionadmin module, for example, by going to locahost:8888/ionadmin/:"
msgstr ""

#: ../../README.md:193
msgid "Select the \"Security\" navigation item,"
msgstr ""

#: ../../README.md:194
msgid "Select the Roles navigation subitem,"
msgstr ""

#: ../../README.md:195
msgid "Select an existing role and click the edit or create a new role buttons,"
msgstr ""

#: ../../README.md:196
msgid "In the \"Access righrs\" field, select the Services item,"
msgstr ""

#: ../../README.md:197
msgid ""
"Expand the list of rights for the \"Generation of security tokens through"
" web services (ws ::: gen-ws-token)\" resource,"
msgstr ""

#: ../../README.md:198
msgid "Select \"Use\" and click \"Save\"."
msgstr ""

#: ../../README.md:202
msgid ""
"The REST module has several built-in services designed to implement "
"typical operations with the module:"
msgstr ""

#: ../../README.md:204
msgid "acceptor - service provides mass creation of objects"
msgstr ""

#: ../../README.md:205
msgid "token -  service provides the issuance of a token for an authorized user"
msgstr ""

#: ../../README.md:206
msgid "crud - CRUD service for system objects"
msgstr ""

#: ../../README.md:208
msgid "Built-in \"acceptor\" service"
msgstr ""

#: ../../README.md:210
msgid ""
"The acceptor service designed for mass storage of objects of different "
"classes."
msgstr ""

#: ../../README.md:212
msgid ""
"It is required to register the service in the deploy.json application "
"configuration file to work with the service. At the same time, the "
"service must be indicated in the options - the dataRepo and metaRepo "
"repositories. For example:"
msgstr ""

#: ../../README.md:229
msgid ""
"Authorization is carried out through all the main types of access, and by"
" default through the user account."
msgstr ""

#: ../../README.md:231
msgid ""
"The service is carried out by the POST method, objects are transferred as"
" an array of objects in JSON format in the request body with the json "
"content header Content-Type:application/json. Auto-generated fields are "
"optional."
msgstr ""

#: ../../README.md:233
msgid ""
"In the header in the ion-converter property, the name of the converter "
"that can be used when processing data can be passed. Both request data "
"and response data. In this case, the data converter itself must be "
"registered in the options service. If no handler is specified, the "
"default handler is used."
msgstr ""

#: ../../README.md:237
msgid "The object data must include:"
msgstr ""

#: ../../README.md:239
msgid "_id - identifier of the object by key field"
msgstr ""

#: ../../README.md:240
msgid "_class - object class with namespace"
msgstr ""

#: ../../README.md:241
msgid "_classVer - class version"
msgstr ""

#: ../../README.md:243
msgid ""
"The remaining values must match the properties of the class, including "
"data type matching. Example."
msgstr ""

#: ../../README.md:253
msgid "The method returns the code 200 and an array of stored objects."
msgstr ""

#: ../../README.md:269
msgid ""
"In case of an error, the response code will be 400, and the response text"
" will contain"
msgstr ""

#: ../../README.md:284
msgid "Built-in service \"token\""
msgstr ""

#: ../../README.md:286
msgid ""
"The token service is intended for issuing a token to an authenticated "
"user, for its further use in token authentication services."
msgstr ""

#: ../../README.md:288
msgid ""
"The service does not require registration in deploy.json. The service "
"provides the issuance of a token for an authorized user, if he has the "
"use rights for the ws:::gen-ws-token resource or has administrator "
"rights. In response to the request, there is a token of the following "
"type e444c69894d2087696e0a6c6914788f67ebcf6ee. The default token lifetime"
" is 100 years."
msgstr ""

#: ../../README.md:291
msgid "Request example via authentication of the basicAuth type:"
msgstr ""

#: ../../README.md:297
msgid "Example request with authentication through parameters in the header"
msgstr ""

#: ../../README.md:303
msgid "Built-in service \"crud\""
msgstr ""

#: ../../README.md:305
msgid ""
"The crud service implements a REST API based on the basic CRUD operations"
" (create, read, update, delete)."
msgstr ""

#: ../../README.md:307
msgid ""
"The service requires registration in deploy.json of the application and "
"requires a mandatory data source dataRepo in options of the service, as "
"well as the authorization source auth to access user data. It is "
"advisable to specify as a data repository - a repository with full "
"security processing in order to test the access to objects taking into "
"account dynamic security. For example:"
msgstr ""

#: ../../README.md:325
msgid ""
"Authentication is done through all the main types of access, and by "
"default through a user account."
msgstr ""

#: ../../README.md:327 ../../README.md:481
msgid "Example:"
msgstr ""

#: ../../README.md:333
msgid ""
"By default, without the correct parameters - server response code about "
"the error is 404."
msgstr ""

#: ../../README.md:348
msgid "Getting a list of objects: GET crud/:class@namespace method"
msgstr ""

#: ../../README.md:350
msgid ""
"Getting a list of objects is carried out by the GET method, while "
"indicating the class code with a namespace, for example "
"rest/crud/class_string@develop-and-test/"
msgstr ""

#: ../../README.md:355
msgid ""
"In response, the service returns a JSON Object with an offset of 0 and a "
"count of 5 records and a status of 200, if there is no such class, "
"returns the code 404."
msgstr ""

#: ../../README.md:377
msgid "The query can be implemented with the following query parameters:"
msgstr ""

#: ../../README.md:379
msgid "_offset - sample offset, 0 - by default"
msgstr ""

#: ../../README.md:380
msgid "_count - number of values in the sample, 5 - by default"
msgstr ""

#: ../../README.md:381
msgid ""
"_eager - a list of class properties, separated by the symbol | for which "
"it is necessary to configure the data eager loading."
msgstr ""

#: ../../README.md:382
msgid ""
"[name of property] - all parameters are accepted by the request name, "
"except those starting with _ which are considered the names of the class "
"attributes, and their values are set as filters."
msgstr ""

#: ../../README.md:384
msgid "Examples:"
msgstr ""

#: ../../README.md:395
msgid "Check of the object availability: HEAD crud/:class@namespace/:id method"
msgstr ""

#: ../../README.md:397
msgid ""
"Check of the object availability is carried out by the GET method, while "
"indicating the class code with a namespace and the value of the object "
"key, for example rest/crud/class_string@develop-and-"
"test/66dbb3d0-5583-11e6-aef7-cf50314f026b"
msgstr ""

#: ../../README.md:403
msgid ""
"If the object exists, it returns the response code 200, if the object "
"does not find the code is 404, if there is no correct rights - 403."
msgstr ""

#: ../../README.md:405
msgid "Receiving object: GET crud/:class@namespace/:id method"
msgstr ""

#: ../../README.md:407
msgid ""
"Obtaining an object is carried out by the GET method, while indicating "
"the class code with a namespace and the value of the object key, for "
"example rest/crud/class_string@develop-and-"
"test/66dbb3d0-5583-11e6-aef7-cf50314f026b"
msgstr ""

#: ../../README.md:413
msgid ""
"In addition, you can set the _eager parameter in the query containing a "
"list of class properties, separated by the | symbol for which it is "
"necessary to configure the data eager loading (links or collections). For"
" example:"
msgstr ""

#: ../../README.md:420
msgid ""
"If the object exists, it returns the response code 200 and the object "
"itself in json format, if the object does not find the code is 404, if "
"there is no correct rights - 403."
msgstr ""

#: ../../README.md:435
msgid "Object creation: POST crud/:class@namespace method"
msgstr ""

#: ../../README.md:437
msgid ""
"An object is created using the POST method, and the class code with a "
"namespace is specified, rest/crud/class_string@develop-and-test. The "
"object itself is transmitted in the request body in json format with "
"obligatory indication in the header of the json content type Content-"
"Type:application/json. Auto-generated fields are optional. Example:"
msgstr ""

#: ../../README.md:446
msgid ""
"The created object will be returned in response, in which all auto-"
"created fields will be filled and the response code will be  200."
msgstr ""

#: ../../README.md:462
msgid ""
"In case of an error, the response code will be 400, and the response text"
" will contain:"
msgstr ""

#: ../../README.md:477
msgid "Object update: PATCH or PUT crud/:class@namespace/:id method"
msgstr ""

#: ../../README.md:479
msgid ""
"Updating an object is done using the PATCH or PUT method, and the class "
"code with neispace and the value of the object key are indicated, for "
"example rest/crud/class_string@develop-and-"
"test/66dbb3d0-5583-11e6-aef7-cf50314f026b. The object itself is "
"transmitted in the request body in json format with obligatory indication"
" in the header of the json content type - Content-Type:application/json."
msgstr ""

#: ../../README.md:490
msgid ""
"If the object exists, it returns the response code 200 and the object "
"itself in json format, if the object does not find the code is 404, if "
"the processing fails, the code is 500, if there is no correct rights - "
"403."
msgstr ""

#: ../../README.md:492
msgid "Object example:"
msgstr ""

#: ../../README.md:508
msgid "Delete object: DELETE crud/:class@namespace/:id method"
msgstr ""

#: ../../README.md:510
msgid ""
"Deleting an object is carried out by the DELETE method, while indicating "
"the class code with a namespace and the value of the object key, for "
"example rest/crud/class_string@develop-and-"
"test/66dbb3d0-5583-11e6-aef7-cf50314f026b."
msgstr ""

#: ../../README.md:517
msgid ""
"If successful, the service returns the response code 200, in case the "
"object was not found 404."
msgstr ""

#: ../../README.md:520
msgid "Service сreation"
msgstr ""

#: ../../README.md:522
msgid "Creating your own service consists of the following:"
msgstr ""

#: ../../README.md:524
msgid "service registration in deploy.json"
msgstr ""

#: ../../README.md:525
msgid "creating a service handler in the application"
msgstr ""

#: ../../README.md:526
msgid "implementation of request processing logic"
msgstr ""

#: ../../README.md:528
msgid "Service registration in deploy.json application"
msgstr ""

#: ../../README.md:530
msgid ""
"Test service registration example, for details see Service registration "
"in application configuration"
msgstr ""

#: ../../README.md:547
msgid "Development of the service handler in the app"
msgstr ""

#: ../../README.md:549
msgid ""
"All services are implemented as heirs from Service - functions of the "
"rest module."
msgstr ""

#: ../../README.md:551
msgid ""
"Each service must export a handler function in which an asynchronous "
"method this._route are implemented. It is necessary to register processed"
" methods and paths, throuth the this.addHandler functions, returning the "
"Promise . Handler function will have access to options and the access to "
"the data repositories, authorization, metadata and classes (if they are "
"specified in the application configuration in the deploy.json file) and "
"will also receive an object with the generic name req - which is the "
"request object of the express library."
msgstr ""

#: ../../README.md:554
msgid "The data, already parsed into the object will be located in req.body."
msgstr ""

#: ../../README.md:556
msgid ""
"The handler function must return a Promise resolving to the result of the"
" handler (for processing in Service "
"modules/rest/lib/interfaces/Service.js), the handler will issue it with a"
" code of 200 and a content type - Content-Type:application/json. If "
"during processing there will be an error intercepted by catch, then for "
"errors related to access control, an answer with an error text and code "
"will be returned 403, and for everything else, the response code 500 and "
"error message Internal server error."
msgstr ""

#: ../../README.md:559
msgid ""
"An example of implementing a service issuing lists of objects with "
"filters for a class_string class in the [develop-and-test] application."
msgstr ""

#: ../../README.md:561
msgid ""
"It is also convenient to study the crud method itself, located at "
"modules/rest/lib/impl/crud.js"
msgstr ""

#: ../../README.md:618
msgid "Query without attributes in the query body:"
msgstr ""

#: ../../README.md:624
msgid "Returns all the list:"
msgstr ""

#: ../../README.md:647
msgid ""
"A query with an attribute parameter equal to the value in the attribute "
"string_text:"
msgstr ""

#: ../../README.md:649
msgid "Example of the \\\"String [0]\\\" type in the \\\"Text [1]\\\" view"
msgstr ""

#: ../../README.md:656
msgid "Returns the objects objects satisfying the condition:"
msgstr ""

#: ../../README.md:668
msgid "The SEARCH method"
msgstr ""

#: ../../README.md:669
msgid "Sending requests with files in the CRUD service"
msgstr ""

#: ../../README.md:670
msgid "Work-flow execution service"
msgstr ""

#: ../../README.md:671
msgid "Metadata publishing service"
msgstr ""

#: ../../README.md:674
msgid "Licence    Contact us"
msgstr ""

#: ../../README.md:678
msgid "Copyright (c) 2018 LLC \"ION DV\".<br />All rights reserved."
msgstr ""

